// Responsiveness
@mixin breakpoint($point) {
  @if $point == desktop {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  }
  @if $point == tablet {
    @media only screen and (max-width: 1199px) {
      @content;
    }
  }
  @if $point == tablet-md {
    @media only screen and (max-width: 929px) {
      @content;
    }
  }
  @if $point == tablet-sm {
    @media only screen and (max-width: 768px) {
      @content;
    }
  }
  @if $point == mobile-lg {
    @media only screen and (max-width: 581px) {
      @content;
    }
  }
  @if $point == mobile-medium {
    @media only screen and (max-width: 375px) {
      @content;
    }
  }
  @if $point == mobile-small {
    @media only screen and (max-width: 320px) {
      @content;
    }
  }
}

// dynamic sizing based on the default size & vw of the app
@mixin dynamic-size($min-val, $max-val) {
  font-size: dync-clamp($min-val, $max-val);
}
@mixin dynamic-width($min-val, $max-val) {
  width: dync-clamp($min-val, $max-val);
}
@mixin dynamic-height($min-val, $max-val) {
  height: dync-clamp($min-val, $max-val);
}

@mixin signBaseStyles {
  width: 100%;
  height: 100%;
  padding: 0;

  @include breakpoint(tablet) {
    padding: 0;
    height: 100%;
  }

  &-content {
    --sign-main-content-width: 100%;
    --contain-padding-x: 4.4rem;
    --contain-padding-y: 3rem;
    --icon-contain-pb: 2.09rem;
    max-width: var(--sign-main-content-width);
    width: 100%;
    display: flex;
    min-height: 100vh;
    position: relative;

    .layout_icon {
      padding-bottom: var(--icon-contain-pb);
      padding-top: var(--contain-padding-y);
      display: none;
      position: fixed;
      top: var(--contain-padding-y);
      top: 0;
      left: 0;
      padding-left: var(--contain-padding-x);
      display: block;
      width: 100%;
      background: $color-white;
      z-index: 1;
    }
    &_ltr {
      flex: 1;
      padding: var(--contain-padding-y) var(--contain-padding-x);
      padding-top: calc(var(--contain-padding-y) + var(--icon-contain-pb));
      min-height: 100vh;
      position: relative;
      width: 64.79%;
      overflow-x: hidden;

      .layout_content__contain {
        height: 100%;
        margin: 0;
        display: grid;
        place-items: center;
        padding-top: var(--icon-contain-pb);
      }
    }
    &_rtl {
      width: 35.21%;
      min-height: 100vh;
      height: 100%;
      position: sticky;
      top: 0;
      z-index: 2;
      &_lead_img {
        width: 100%;
        min-height: 100vh;
        background-image: url("../../../assets/images/sign_base_img.webp");
        background-size: 100% 100%;
        background-repeat: no-repeat;
      }
      .sign_lead_content {
        position: absolute;
        z-index: 1;
        bottom: 4.9rem;
        left: 25%;
        transform: translateX(-25%);
        max-width: 43.3rem;
        h1 {
          color: $neutral-25;
          margin-bottom: 0.5rem;
        }
        p {
          color: $neutral-100;
        }
      }
    }

    @include breakpoint(tablet) {
      &_rtl {
        display: none;
      }
    }
    @include breakpoint(tablet-sm) {
      --sign-main-content-width: 43rem;
      margin: 0 auto;

      &_ltr {
        padding-left: 2.5rem;
        padding-right: 2.4rem;
      }
    }
  }
}

// Capitalize first letter in a sentence
@mixin sentence-case() {
  text-transform: lowercase;

  &:first-letter {
    text-transform: uppercase;
  }
}

@mixin caret-base {
  content: "";
  display: block;
  width: 1rem;
  height: 1rem;
  position: absolute;
  transform: rotate(45deg);
  background-color: $primary-900;
}
